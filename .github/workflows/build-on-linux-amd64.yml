name: build-on-linux-amd64

on:
  push:
    branches: ["master"]
  pull_request:
    branches: ["master"]
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  init:
    name: Init
    runs-on: ubuntu-latest
    outputs:
      TARGETS: ${{ steps.get_all_targets.outputs.TARGETS }}
    steps:
      - uses: actions/checkout@v4

      - name: Get all targets
        id: get_all_targets
        run: |
          declare -a arr=()
          while IFS= read -r line; do
          if [ -z "$line" ] || [ "${line:0:1}" == "#" ]; then
            continue
          fi
          arr+=("$line")
          done < scripts/triples.txt
          printf -v json '"%s",' "${arr[@]}"
          json="[${json%,}]"
          echo "TARGETS=$json" >> $GITHUB_OUTPUT

      - name: Init sources
        run: |
          make extract_all

      - uses: actions/upload-artifact@v4
        with:
          name: sources
          path: sources

  build_targets_on_linux_amd64:
    name: Build
    runs-on: ubuntu-latest
    needs:
      - init
    strategy:
      matrix:
        targets: ${{ fromJSON(needs.init.outputs.TARGETS) }}
    steps:
      - uses: actions/checkout@v4

      - uses: actions/download-artifact@v4
        with:
          name: sources
          path: sources

      - name: Build
        run: |
          bash scripts/build.sh \
            -nLO1 \
            -T "${{ matrix.targets }}"

      - name: Upload ${{ matrix.targets }} cross
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.targets }}-cross-linux-amd64
          path: dist/${{ matrix.targets }}-cross

      - name: Upload ${{ matrix.targets }} native
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.targets }}-native-linux-amd64
          path: dist/${{ matrix.targets }}-native
