name: build-on-linux-ppc64le

on:
  workflow_dispatch:

jobs:
  init:
    name: Init
    runs-on: ubuntu-latest
    outputs:
      TARGETS: ${{ steps.get_all_targets.outputs.TARGETS }}
    steps:
      - uses: actions/checkout@v4

      - name: Get all targets
        id: get_all_targets
        run: |
          declare -a arr=()
          while IFS= read -r line; do
          if [ -z "$line" ] || [ "${line:0:1}" == "#" ]; then
            continue
          fi
          arr+=("$line")
          done < scripts/triples.txt
          printf -v json '"%s",' "${arr[@]}"
          json="[${json%,}]"
          echo "TARGETS=$json" >> $GITHUB_OUTPUT

  build_targets_on_linux_ppc64le_cross:
    name: Build cross
    runs-on: ubuntu-latest
    needs:
      - init
    strategy:
      matrix:
        targets: ${{ fromJSON(needs.init.outputs.TARGETS) }}
    steps:
      - uses: actions/checkout@v4

      - uses: uraimo/run-on-arch-action@v2
        name: Build
        id: build
        with:
          arch: ppc64le
          distro: alpine_latest
          githubToken: ${{ github.token }}
          dockerRunArgs: |
            --volume "${PWD}:/build"
          shell: /bin/sh
          install: |
            apk add --no-cache \
              coreutils \
              curl \
              bzip2 \
              xz \
              make \
              bison \
              rsync \
              patch \
              perl
          run: |
            cd /build
            unamespacer=$(uname -s | tr '[:upper:]' '[:lower:]')-$(uname -m)
            NATIVE_COMPILER="https://github.com/${{ github.repository }}/releases/download/v0.4.0/powerpc64le-linux-musl-native-${unamespacer}.tgz"
            NATIVE_COMPILER_STATUS=$(curl -sILo /dev/null -w "%{http_code}\n" $NATIVE_COMPILER)
            if [ $NATIVE_COMPILER_STATUS -ne 200 ]; then apk add --no-cache g++; else mkdir -p "powerpc64le-linux-musl-native" && curl -sL "$NATIVE_COMPILER" | tar -zxf - -C "powerpc64le-linux-musl-native" --strip-components 1 && chmod -R 0755 powerpc64le-linux-musl-native && export PATH="$PWD/powerpc64le-linux-musl-native/bin:$PATH"; fi
            sh scripts/build.sh \
                -LO1 \
                -T "${{ matrix.targets }}"

      - name: Upload ${{ matrix.targets }} cross
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.targets }}-cross
          path: dist/${{ matrix.targets }}-cross

  build_targets_on_linux_ppc64le_native:
    name: Build native
    runs-on: ubuntu-latest
    needs:
      - init
      - build_targets_on_linux_ppc64le_cross
    strategy:
      matrix:
        targets: ${{ fromJSON(needs.init.outputs.TARGETS) }}
    steps:
      - uses: actions/checkout@v4

      - uses: actions/download-artifact@v4
        with:
          name: ${{ matrix.targets }}-cross
          path: dist/${{ matrix.targets }}-cross

      - uses: uraimo/run-on-arch-action@v2
        name: Build
        id: build
        with:
          arch: ppc64le
          distro: alpine_latest
          githubToken: ${{ github.token }}
          dockerRunArgs: |
            --volume "${PWD}:/build"
          shell: /bin/sh
          install: |
            apk add --no-cache \
              coreutils \
              curl \
              bzip2 \
              xz \
              make \
              bison \
              rsync \
              patch \
              perl
          run: |
            cd /build
            chmod -R 0755 dist/${{ matrix.targets }}-cross
            unamespacer=$(uname -s | tr '[:upper:]' '[:lower:]')-$(uname -m)
            NATIVE_COMPILER="https://github.com/${{ github.repository }}/releases/download/v0.4.0/powerpc64le-linux-musl-native-${unamespacer}.tgz"
            NATIVE_COMPILER_STATUS=$(curl -sILo /dev/null -w "%{http_code}\n" $NATIVE_COMPILER)
            if [ $NATIVE_COMPILER_STATUS -ne 200 ]; then apk add --no-cache g++; else mkdir -p "powerpc64le-linux-musl-native" && curl -sL "$NATIVE_COMPILER" | tar -zxf - -C "powerpc64le-linux-musl-native" --strip-components 1 && chmod -R 0755 powerpc64le-linux-musl-native && export PATH="$PWD/powerpc64le-linux-musl-native/bin:$PATH"; fi
            sh scripts/build.sh \
                -NLO1 \
                -T "${{ matrix.targets }}"

      - name: Upload ${{ matrix.targets }} native
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.targets }}-native
          path: dist/${{ matrix.targets }}-native
