name: build

on:
  push:
    branches: ["master"]
  pull_request:
    branches: ["master"]

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  init:
    name: Init
    runs-on: ubuntu-latest
    outputs:
      TARGETS: ${{ steps.get_all_targets.outputs.TARGETS }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Get all targets
        id: get_all_targets
        run: |
          declare -a arr=()
          while IFS= read -r line; do
          if [ -z "$line" ] || [ "${line:0:1}" == "#" ]; then
            continue
          fi
          arr+=("$line")
          done < scripts/triples.txt
          printf -v json '"%s",' "${arr[@]}"
          json="[${json%,}]"
          echo "TARGETS=$json" >> $GITHUB_OUTPUT

      - name: Init sources
        run: |
          make extract_all

      - name: Upload sources
        uses: actions/upload-artifact@v4
        with:
          name: sources
          path: sources

  build_linux_amd64_host:
    name: Build Linux amd64 Host
    runs-on: ubuntu-latest
    needs:
      - init
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Download sources
        uses: actions/download-artifact@v4
        with:
          name: sources
          path: sources

      - name: Build
        run: |
          bash scripts/build.sh \
            -nL \
            -O2 \
            -T \
            x86_64-linux-musl

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: tmp x86_64-linux-musl-native
          path: dist/x86_64-linux-musl-native

  build_targets_on_linux_amd64:
    name: Build Targets on Linux amd64
    runs-on: ubuntu-latest
    needs:
      - init
      - build_linux_amd64_host
    strategy:
      matrix:
        targets: ${{ fromJSON(needs.init.outputs.TARGETS) }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Download native
        uses: actions/download-artifact@v4
        with:
          name: tmp x86_64-linux-musl-native
          path: /tmp/x86_64-linux-musl-native

      - name: Download sources
        uses: actions/download-artifact@v4
        with:
          name: sources
          path: sources

      - name: Build
        run: |
          chmod -R 0755 /tmp/x86_64-linux-musl-native
          export PATH=/tmp/x86_64-linux-musl-native/bin:$PATH
          bash scripts/build.sh \
            -nL \
            -c "x86_64-linux-musl-gcc" \
            -x "x86_64-linux-musl-g++" \
            -T "${{ matrix.targets }}"

      - name: Upload ${{ matrix.targets }} cross
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.targets }}-cross-linux-amd64
          path: dist/${{ matrix.targets }}-cross

      - name: Upload ${{ matrix.targets }} native
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.targets }}-native-linux-amd64
          path: dist/${{ matrix.targets }}-native

  build_targets_on_macos:
    name: Build Targets on macOS
    runs-on: ${{ matrix.run-on }}
    needs:
      - init
    strategy:
      matrix:
        targets: ${{ fromJSON(needs.init.outputs.TARGETS) }}
        run-on:
          - macos-latest-xlarge
          - macos-latest
        exclude:
          - targets:
            - i486-w64-mingw32
            - i686-w64-mingw32
            - x86_64-w64-mingw32
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Download sources
        uses: actions/download-artifact@v4
        with:
          name: sources
          path: sources

      - name: Init Dependencies
        run: |
          brew install llvm
          brew install make
          brew install gnu-sed
          brew install gawk
          brew install coreutils
          brew install findutils

      - name: Build
        run: |
          bash scripts/build.sh \
            -sL \
            -c "llvm-gcc" \
            -x "llvm-g++" \
            -T "${{ matrix.targets }}"

      - name: Get machine
        id: get_machine
        run: echo "MACHINE=$(uname -m)" >> $GITHUB_OUTPUT

      - name: Upload ${{ matrix.targets }} cross
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.targets }}-cross-darwin-${{ steps.get_machine.outputs.MACHINE }}
          path: dist/${{ matrix.targets }}-cross

      - name: Upload ${{ matrix.targets }} native
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.targets }}-native-darwin-${{ steps.get_machine.outputs.MACHINE }}
          path: dist/${{ matrix.targets }}-native
