name: build

on:
  push:
    branches: ["master"]
  pull_request:
    branches: ["master"]

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  build_host:
    strategy:
      matrix:
        platform: [ubuntu-latest]
    name: Build Host
    runs-on: ${{ matrix.platform }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Build temp
        run: |
          bash scripts/build.sh \
            -n \
            -O0 \
            -T \
            x86_64-linux-musl
          mv dist/x86_64-linux-musl-native /tmp
          rm -rf dist
      - name: Build host
        run: |
          bash scripts/build.sh -n \
            -O2 \
            -c "/tmp/x86_64-linux-musl-native/bin/x86_64-linux-musl-gcc" \
            -x "/tmp/x86_64-linux-musl-native/bin/x86_64-linux-musl-g++" \
            -T \
            x86_64-linux-musl
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: x86_64-linux-musl-native
          path: dist/x86_64-linux-musl-native

  build_aarch64:
    strategy:
      matrix:
        platform: [ubuntu-latest]
    name: Build aarch64
    runs-on: ${{ matrix.platform }}
    needs: build_host
    steps:
      - name: Download native
        uses: actions/download-artifact@v4
        with:
          name: x86_64-linux-musl-native
          path: /tmp
      - name: Checkout
        uses: actions/checkout@v4
      - name: Build
        run: |
          bash scripts/build.sh \
            -nt \
            -c "/tmp/x86_64-linux-musl-native/bin/x86_64-linux-musl-gcc" \
            -x "/tmp/x86_64-linux-musl-native/bin/x86_64-linux-musl-g++" \
            -T \
            aarch64-linux-musl

  build_arm:
    strategy:
      matrix:
        platform: [ubuntu-latest]
    name: Build arm
    runs-on: ${{ matrix.platform }}
    needs: build_host
    steps:
      - name: Download native
        uses: actions/download-artifact@v4
        with:
          name: x86_64-linux-musl-native
          path: /tmp
      - name: Checkout
        uses: actions/checkout@v4
      - name: Build
        run: |
          bash scripts/build.sh \
            -nt \
            -c "/tmp/x86_64-linux-musl-native/bin/x86_64-linux-musl-gcc" \
            -x "/tmp/x86_64-linux-musl-native/bin/x86_64-linux-musl-g++" \
            -T \
            arm-linux-musleabi \
            arm-linux-musleabihf \
            armv5-linux-musleabi \
            armv5-linux-musleabihf \
            armv6-linux-musleabi \
            armv6-linux-musleabihf \
            armv7-linux-musleabi \
            armv7-linux-musleabihf

  build_x86:
    strategy:
      matrix:
        platform: [ubuntu-latest]
    name: Build x86
    runs-on: ${{ matrix.platform }}
    needs: build_host
    steps:
      - name: Download native
        uses: actions/download-artifact@v4
        with:
          name: x86_64-linux-musl-native
          path: /tmp
      - name: Checkout
        uses: actions/checkout@v4
      - name: Build
        run: |
          bash scripts/build.sh \
            -nt \
            -c "/tmp/x86_64-linux-musl-native/bin/x86_64-linux-musl-gcc" \
            -x "/tmp/x86_64-linux-musl-native/bin/x86_64-linux-musl-g++" \
            -T \
            i686-linux-musl \
            i486-linux-musl \
            x86_64-linux-musl \
            x86_64-linux-muslx32

  build_mips:
    strategy:
      matrix:
        platform: [ubuntu-latest]
    name: Build mips
    runs-on: ${{ matrix.platform }}
    needs: build_host
    steps:
      - name: Download native
        uses: actions/download-artifact@v4
        with:
          name: x86_64-linux-musl-native
          path: /tmp
      - name: Checkout
        uses: actions/checkout@v4
      - name: Build
        run: |
          bash scripts/build.sh \
            -nt \
            -c "/tmp/x86_64-linux-musl-native/bin/x86_64-linux-musl-gcc" \
            -x "/tmp/x86_64-linux-musl-native/bin/x86_64-linux-musl-g++" \
            -T \
            mips-linux-musl \
            mips-linux-muslsf \
            mips-linux-musln32sf \
            mips64-linux-musl \
            mips64-linux-musln32 \
            mips64-linux-musln32sf \
            mips64el-linux-musl \
            mips64el-linux-musln32 \
            mips64el-linux-musln32sf \
            mipsel-linux-musl \
            mipsel-linux-musln32 \
            mipsel-linux-musln32sf \
            mipsel-linux-muslsf

  build_powerpc:
    strategy:
      matrix:
        platform: [ubuntu-latest]
    name: Build powerpc
    runs-on: ${{ matrix.platform }}
    needs: build_host
    steps:
      - name: Download native
        uses: actions/download-artifact@v4
        with:
          name: x86_64-linux-musl-native
          path: /tmp
      - name: Checkout
        uses: actions/checkout@v4
      - name: Build
        run: |
          bash scripts/build.sh \
            -nt \
            -c "/tmp/x86_64-linux-musl-native/bin/x86_64-linux-musl-gcc" \
            -x "/tmp/x86_64-linux-musl-native/bin/x86_64-linux-musl-g++" \
            -T \
            powerpc-linux-musl \
            powerpc-linux-muslsf \
            powerpc64-linux-musl \
            powerpc64le-linux-musl \
            powerpcle-linux-musl \
            powerpcle-linux-muslsf

  build_riscv:
    strategy:
      matrix:
        platform: [ubuntu-latest]
    name: Build riscv
    runs-on: ${{ matrix.platform }}
    needs: build_host
    steps:
      - name: Download native
        uses: actions/download-artifact@v4
        with:
          name: x86_64-linux-musl-native
          path: /tmp
      - name: Checkout
        uses: actions/checkout@v4
      - name: Build
        run: |
          bash scripts/build.sh \
            -nt \
            -c "/tmp/x86_64-linux-musl-native/bin/x86_64-linux-musl-gcc" \
            -x "/tmp/x86_64-linux-musl-native/bin/x86_64-linux-musl-g++" \
            -T \
            riscv64-linux-musl

  build_s390x:
    strategy:
      matrix:
        platform: [ubuntu-latest]
    name: Build s390x
    runs-on: ${{ matrix.platform }}
    needs: build_host
    steps:
      - name: Download native
        uses: actions/download-artifact@v4
        with:
          name: x86_64-linux-musl-native
          path: /tmp
      - name: Checkout
        uses: actions/checkout@v4
      - name: Build
        run: |
          bash scripts/build.sh \
            -nt \
            -c "/tmp/x86_64-linux-musl-native/bin/x86_64-linux-musl-gcc" \
            -x "/tmp/x86_64-linux-musl-native/bin/x86_64-linux-musl-g++" \
            -T \
            s390x-linux-musl

  build_mingw:
    strategy:
      matrix:
        platform: [ubuntu-latest]
    name: Build mingw
    runs-on: ${{ matrix.platform }}
    needs: build_host
    steps:
      - name: Download native
        uses: actions/download-artifact@v4
        with:
          name: x86_64-linux-musl-native
          path: /tmp
      - name: Checkout
        uses: actions/checkout@v4
      - name: Build
        run: |
          bash scripts/build.sh \
            -nt \
            -c "/tmp/x86_64-linux-musl-native/bin/x86_64-linux-musl-gcc" \
            -x "/tmp/x86_64-linux-musl-native/bin/x86_64-linux-musl-g++" \
            -T \
            i486-w64-mingw32 \
            i686-w64-mingw32 \
            x86_64-w64-mingw32
