name: build

on:
  push:
    branches: ["master"]
  pull_request:
    branches: ["master"]

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  build_host:
    name: Build Host
    runs-on: ubuntu-latest
    outputs:
      TARGETS: ${{ steps.get_all_targets.outputs.TARGETS }}
      CACHE_KEY: ${{ steps.gen_cache_key.outputs.CACHE_KEY }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Get all targets
        id: get_all_targets
        run: |
          declare -a arr=()
          while IFS= read -r line; do
          if [ -z "$line" ] || [ "${line:0:1}" == "#" ]; then
            continue
          fi
          arr+=("$line")
          done < scripts/triples.txt
          printf -v json '"%s",' "${arr[@]}"
          json="[${json%,}]"
          echo "TARGETS=$json" >> $GITHUB_OUTPUT

      - name: Generate cache key
        id: gen_cache_key
        run: |
          echo "CACHE_KEY=$(sha1sum Makefile | cut -d ' ' -f 1)$(sha1sum scripts/build.sh | cut -d ' ' -f 1)" >> $GITHUB_OUTPUT

      - name: Cache sources
        id: cache-sources
        uses: actions/cache@v4
        with:
            path: sources
            key: ${{ steps.gen_cache_key.outputs.CACHE_KEY }}

      - name: Build
        run: |
          bash scripts/build.sh \
            -nL \
            -O2 \
            -T \
            x86_64-linux-musl

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: tmp x86_64-linux-musl-native
          path: dist/x86_64-linux-musl-native

  build_targets:
    name: Build Targets
    runs-on: ubuntu-latest
    needs: build_host
    strategy:
      max-parallel: 8
      matrix:
        targets: ${{ fromJSON(needs.build_host.outputs.TARGETS) }}
    steps:
      - name: Download native
        uses: actions/download-artifact@v4
        with:
          name: tmp x86_64-linux-musl-native
          path: /tmp/x86_64-linux-musl-native

      - name: Checkout
        uses: actions/checkout@v4

      - name: Cache sources
        id: cache-sources
        uses: actions/cache@v4
        with:
            path: sources
            key: ${{ needs.build_host.outputs.CACHE_KEY }}

      - name: Build
        run: |
          chmod -R 0755 /tmp/x86_64-linux-musl-native
          PATH="/tmp/x86_64-linux-musl-native/bin:$PATH" bash scripts/build.sh \
            -nLOg \
            -c "x86_64-linux-musl-gcc" \
            -x "x86_64-linux-musl-g++" \
            -T "${{ matrix.targets }}"

      - name: Upload ${{ matrix.targets }} cross
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.targets }}-cross
          path: dist/${{ matrix.targets }}-cross

      - name: Upload ${{ matrix.targets }} native
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.targets }}-native
          path: dist/${{ matrix.targets }}-native